# Generated by Django 4.0.1 on 2022-01-25 02:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.PositiveIntegerField(blank=True, null=True, unique=True, verbose_name='Telegram id')),
                ('tg_username', models.CharField(max_length=32, verbose_name='Ник в Telegram')),
                ('discord_username', models.CharField(blank=True, max_length=32, null=True, verbose_name='discord username')),
                ('name', models.CharField(max_length=32, verbose_name='Имя и фамилия')),
                ('role', models.CharField(choices=[('ST', 'Ученик'), ('PM', 'PM')], default='ST', max_length=3, verbose_name='Роль')),
                ('level', models.CharField(choices=[('BG', 'Новичок'), ('BG+', 'Новичок+'), ('JR', 'Джуниор'), ('N/A', 'Не применимо')], default='N/A', max_length=3, verbose_name='Уровень ученика')),
                ('is_far_east', models.BooleanField(blank=True, default=False, null=True, verbose_name='Из ДВ?')),
            ],
            options={
                'verbose_name': 'Участник проекта',
                'verbose_name_plural': 'Участник проекта',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='Название проекта')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Краткое описание')),
                ('link_doc', models.URLField(blank=True, null=True, verbose_name='Ссылка на бриф')),
            ],
            options={
                'verbose_name': 'Типовой проект',
                'verbose_name_plural': 'Типовой проект',
            },
        ),
        migrations.CreateModel(
            name='TeamProject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField(verbose_name='Дата и время начала проекта')),
                ('date_end', models.DateTimeField(verbose_name='Дата и время окончания проекта')),
                ('discord_server_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на discord сервер')),
                ('trello_desk_link', models.URLField(blank=True, null=True, verbose_name='Ссылка на trello доску')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teamprojects', to='bot.project', verbose_name='Описание проекта')),
            ],
            options={
                'verbose_name': 'Проект команды',
                'verbose_name_plural': 'Проекты команд',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_slot', models.TimeField(verbose_name='Время начала созвона')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeslots', to='bot.participant', verbose_name='Участник')),
                ('team_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeslots', to='bot.teamproject', verbose_name='Проект команды')),
            ],
            options={
                'verbose_name': 'Слот времени',
                'verbose_name_plural': 'Слоты времени',
            },
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='ND', max_length=3, verbose_name='Тип ограничения')),
                ('first', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='firsts', to='bot.participant', verbose_name='Первый участник')),
                ('second', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seconds', to='bot.participant', verbose_name='Второй участник')),
            ],
            options={
                'verbose_name': 'Ограничение на пары',
                'verbose_name_plural': 'Ограничения на пары',
            },
        ),
    ]
